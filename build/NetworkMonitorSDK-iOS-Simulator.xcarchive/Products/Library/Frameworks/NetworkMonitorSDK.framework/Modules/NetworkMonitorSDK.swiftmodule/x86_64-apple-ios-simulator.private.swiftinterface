// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios10-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name NetworkMonitorSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import Foundation
import ObjectiveC
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct NetworkConnectionLog : Swift.Codable {
  public let initialURL: Swift.String
  public let durationMs: Swift.Int
  public let finalURL: Swift.String?
  public let isSuccessful: Swift.Bool
  public let timestamp: Foundation.Date
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers final public class NetworkMonitorStorage {
  public static let shared: NetworkMonitorSDK.NetworkMonitorStorage
  final public func addLog(_ log: NetworkMonitorSDK.NetworkConnectionLog)
  final public func getAllLogs(completion: @escaping ([NetworkMonitorSDK.NetworkConnectionLog]) -> Swift.Void)
  final public func clearAllLogs()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers @objc public class NetworkMonitor : ObjectiveC.NSObject {
  @objc public static let shared: NetworkMonitorSDK.NetworkMonitor
  @objc public static func startMonitoring()
  @objc public static func stopMonitoring()
  @objc public func addURLProtocolToConfiguration(_ configuration: Foundation.URLSessionConfiguration, type: Swift.String)
  @objc public func trackTaskCreation(taskIdentifier: Swift.Int, initialURL: Foundation.URL, type: Swift.String)
  @objc public func trackTaskCompletion(taskIdentifier: Swift.Int, response: Foundation.URLResponse?, error: (any Swift.Error)?)
  @objc deinit
}
